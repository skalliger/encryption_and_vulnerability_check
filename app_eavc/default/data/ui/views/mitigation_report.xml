
<dashboard version="2" theme="dark">
    <label>Mitigation Report</label>
    <description></description>
    <definition><![CDATA[
{
	"visualizations": {
		"viz_0K0rTXva": {
			"type": "splunk.singlevalue",
			"dataSources": {
				"primary": "ds_uKGYLQ4n"
			},
			"title": "Total mitigated SVDs"
		},
		"viz_zjg7t9F4": {
			"type": "splunk.singlevalue",
			"dataSources": {
				"primary": "ds_6QEM0bEP"
			},
			"title": "Amount of Splunk Vulnerability Disclosures"
		},
		"viz_zZ81wI99": {
			"type": "splunk.singlevalue",
			"dataSources": {
				"primary": "ds_r3Z7SVkG"
			},
			"title": "Still affected by # of SVDs",
			"description": "",
			"options": {
				"unit": "",
				"trendDisplay": "off"
			},
			"eventHandlers": [
				{
					"type": "drilldown.linkToDashboard",
					"options": {
						"app": "app_eavc",
						"dashboard": "splunk_security_advisories",
						"newTab": true
					}
				}
			]
		},
		"viz_ZclBZhq7": {
			"type": "splunk.singlevalue",
			"dataSources": {
				"primary": "ds_PjNn3hAi"
			},
			"title": "Manual Checks required",
			"eventHandlers": [
				{
					"type": "drilldown.linkToDashboard",
					"options": {
						"app": "app_eavc",
						"dashboard": "manual_checks",
						"newTab": true
					}
				}
			]
		},
		"viz_ahHiaDcy": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_GZAvNlGm"
			},
			"title": "Validations",
			"options": {
				"columnFormat": {
					"Check": {
						"data": "> table | seriesByName(\"Check\") | formatByType(CheckColumnFormatEditorConfig)",
						"rowColors": "> table | seriesByName('Check') | pick(CheckRowColorsEditorConfig)",
						"rowBackgroundColors": "> table | seriesByName(\"Check\") | matchValue(CheckRowBackgroundColorsEditorConfig)"
					},
					"Validation": {
						"data": "> table | seriesByName(\"Validation\") | formatByType(ValidationColumnFormatEditorConfig)",
						"rowColors": "> table | seriesByName('Validation') | pick(ValidationRowColorsEditorConfig)",
						"rowBackgroundColors": "> table | seriesByName(\"Validation\") | matchValue(ValidationRowBackgroundColorsEditorConfig)"
					},
					"Check Identifier": {
						"width": 30
					},
					"Check Description": {
						"width": 55
					}
				},
				"count": 20
			},
			"context": {
				"CheckColumnFormatEditorConfig": {
					"string": {
						"unitPosition": "after"
					}
				},
				"CheckRowColorsEditorConfig": [
					"#ffffff"
				],
				"CheckRowBackgroundColorsEditorConfig": [
					{
						"match": "fail",
						"value": "#78062a"
					},
					{
						"match": "pass",
						"value": "#2f8811"
					}
				],
				"ValidationColumnFormatEditorConfig": {
					"string": {
						"unitPosition": "after"
					}
				},
				"ValidationRowColorsEditorConfig": [
					"#ffffff"
				],
				"ValidationRowBackgroundColorsEditorConfig": [
					{
						"match": "fail",
						"value": "#78062a"
					},
					{
						"match": "pass",
						"value": "#2f8811"
					}
				]
			}
		}
	},
	"dataSources": {
		"ds_6QEM0bEP": {
			"type": "ds.search",
			"options": {
				"query": "| inputlookup svd_mitigation_status\n| fields *\n| stats count",
				"queryParameters": {
					"earliest": "$tok_time.earliest$",
					"latest": "$tok_time.latest$"
				}
			},
			"name": "svd_00"
		},
		"ds_p2WvDdCK": {
			"type": "ds.search",
			"options": {
				"query": "| inputlookup svd_mitigation_status\n| fields *",
				"queryParameters": {
					"earliest": "$tok_time.earliest$",
					"latest": "$tok_time.latest$"
				}
			},
			"name": "all_mitigations"
		},
		"ds_uKGYLQ4n": {
			"type": "ds.chain",
			"options": {
				"extend": "ds_p2WvDdCK",
				"query": "| where status LIKE \"mitigated\"\n| stats count"
			},
			"name": "svd_01"
		},
		"ds_r3Z7SVkG": {
			"type": "ds.chain",
			"options": {
				"extend": "ds_p2WvDdCK",
				"query": "| where status LIKE \"vulnerable\"\n| stats count"
			},
			"name": "svd_02"
		},
		"ds_PjNn3hAi": {
			"type": "ds.chain",
			"options": {
				"extend": "ds_p2WvDdCK",
				"query": "| where status LIKE \"manual check\" \n| stats count\n\n\n```\nINFO:\n\nTo set these checks to \"done\", you have to edit the \"svd_manual_checks\" lookup file (shipped with this app).\n\nThe saved search (found under Reports) \"populate_manual_checks_lookup\" is not run by default, so this list may be empty. You can run this once to get your manual checks that need to be done.\n\nYou can easily edit lookup files with the \"Splunk App for Lookup File Editing\" (https://splunkbase.splunk.com/app/1724)\n\n```"
			},
			"name": "svd_03"
		},
		"ds_GZAvNlGm": {
			"type": "ds.search",
			"options": {
				"queryParameters": {
					"earliest": "$tok_time.earliest$",
					"latest": "$tok_time.latest$"
				},
				"query": "| inputlookup svd_mitigation_status\n``` svd_02_MR-vulnerable_svds ```\n| search status=\"vulnerable\" \n| stats count(status) as count \n| eval check = if(count>0, \"fail\", \"pass\") \n| eval name = \"svd_02_MR\" \n| fields name, check\n\n``` svd_03_MR-manual_check_req ```\n| append [ | inputlookup svd_mitigation_status\n``` svd_02_MR-vulnerable_svds ```\n| search status=\"manual check\" \n| stats count(status) as count \n| eval check = if(count>0, \"fail\", \"pass\") \n| eval name = \"svd_03_MR\" \n| fields name, check\n    ]\n\n```  svd_04_MR-indexer_tls ```\n| append [ | rest /services/configs/conf-inputs splunk_server=* \n| search title=\"splunktcp-ssl*\" AND (disabled=0 OR disabled=\"false\") \n| stats count \n| eval name = \"svd_04_MR\" \n| eval check = if(count > 0, \"pass\", \"fail\") \n| fields - count \n    ]\n\n```  svd_05_MR-webserver_https  ```\n| append \n    [ | search index=_internal sourcetype=splunkd_ui_access referer=* \n    | rex field=referer \"(?P<accessType>[^\\:]+)\" \n| where accessType IN (\"http\", \"https\") \n| stats count by accessType \n| eval name = \"svd_05_MR\" \n| eval check = if(accessType=\"http\", \"fail\", \"pass\") \n| fields name, check\n    ] \n\n```  svd_06_MR-signature_version  ```\n| append [ | rest /services/configs/conf-server splunk_server=*\n| fields splunk_server, title, signatureVersion\n| search title=node_auth\n| dedup splunk_server\n| eval name = \"svd_06_MR\" \n| eval check = if(signatureVersion==\"v2\", \"pass\", \"fail\") \n| fields name, check ] \n\n```  svd_07_MR-python_https  ```\n| append [ |search index=app_eavc sourcetype=\"eavc:python_https\" \n| fields host, PYTHONHTTPSVERIFY \n| stats values(PYTHONHTTPSVERIFY) AS PYTHONHTTPSVERIFY by host \n| eval name = \"svd_07_MR\" \n| eval check = if(PYTHONHTTPSVERIFY=\"0\", \"fail\", \"pass\") \n| fields name, check ]\n\n```  svd_08_MR-core_supported  ```\n| append [ | inputlookup svd_splunk_version\n| rex field=getVersion \"(?<installedVersion>^\\d+\\.\\d+)\" \n| fields - match, getVersion \n| lookup svd_splunk_core_supported_versions version AS installedVersion OUTPUTNEW product, release, support_end \n| eval currDate = strftime(now(), \"%Y-%m-%d\") \n| eval currentEpoch = strptime(currDate, \"%Y-%m-%d\") \n| eval futureEpoch = strptime(support_end, \"%Y-%m-%d\") \n| eval check = if(currentEpoch <= futureEpoch, \"pass\", \"fail\") \n| eval name = \"svd_08_MR\" \n| fields name, check] \n\n``` svd_09_MR-uf_supported ```\n| append [ | inputlookup svd_uf_versions.csv\n| rex field=version \"(?<installedVersion>^\\d+\\.\\d+)\" \n| fields - version \n| lookup svd_splunk_uf_supported_versions version AS installedVersion OUTPUTNEW product, release, support_end \n| eval currDate = strftime(now(), \"%Y-%m-%d\") \n| eval currentEpoch = strptime(currDate, \"%Y-%m-%d\") \n| eval futureEpoch = strptime(support_end, \"%Y-%m-%d\") \n| eval check = if(currentEpoch <= futureEpoch, \"pass\", \"fail\") \n| eval name = \"svd_09_MR\" \n| stats values(check) AS checked by name \n| eval check = if(checked==\"fail\" AND checked==\"pass\", \"fail\", \"pass\") \n| fields name, check ]\n\n``` svd_10_MR-kernel_supported ```\n| append [ | search index=app_eavc sourcetype=\"eavc:kernel_check\" \n| fields kernel_version, host \n| lookup linux_kernel_versions kernel_version AS kernel_version OUTPUTNEW eol \n| eval currDate = strftime(now(), \"%Y-%m-%d\") \n| eval currentEpoch = strptime(currDate, \"%Y-%m-%d\") \n| eval futureEpoch = strptime(eol, \"%Y-%m-%d\") \n| eval is_supported = if(currentEpoch <= futureEpoch, \"yes\", \"no\") \n| stats latest(kernel_version) AS kernel by host, is_supported \n| stats values(is_supported) AS supported \n| eval check = if(supported==\"yes\" AND supported==\"no\", \"fail\", if(supported==\"no\", \"fail\", \"pass\")) \n| eval name = \"svd_10_MR\" \n| fields name, check ] \n\n``` svd_11_MR-es_supported ```\n| append [ | search index=\"app_eavc\" sourcetype=\"eavc:sa_mc_apps\" label=\"Enterprise Security\" (disabled=\"0\" OR disabled=\"false\") earliest=-15d@d\n| fields version \n| rex field=version \"(?<installedVersion>\\d+\\.\\d+)\"\n| lookup svd_splunk_es_supported_versions version AS installedVersion OUTPUTNEW support_end \n| fields support_end \n| eval currDate = strftime(now(), \"%Y-%m-%d\") \n| eval currentEpoch = strptime(currDate, \"%Y-%m-%d\") \n| eval futureEpoch = strptime(support_end, \"%Y-%m-%d\") \n| eval check = if(currentEpoch <= futureEpoch, \"pass\", \"fail\")\n| eval name = \"svd_11_MR\" \n| fields name, check]\n    \n``` svd_12_MR-itsi_supported ```\n| append [ | search index=\"app_eavc\" sourcetype=\"eavc:sa_mc_apps\" label=\"IT Service Intelligence\" (disabled=\"0\" OR disabled=\"false\") earliest=-15d@d\n| fields version \n| rex field=version \"(?<installedVersion>\\d+\\.\\d+)\"\n| lookup svd_splunk_itsi_supported_versions version AS installedVersion OUTPUTNEW support_end \n| fields support_end \n| eval currDate = strftime(now(), \"%Y-%m-%d\") \n| eval currentEpoch = strptime(currDate, \"%Y-%m-%d\") \n| eval futureEpoch = strptime(support_end, \"%Y-%m-%d\") \n| eval check = if(currentEpoch <= futureEpoch, \"pass\", \"fail\")\n| eval name = \"svd_12_MR\" \n| fields name, check]\n\n``` svd_13_MR-ds_dc_auth ```\n| append [ | search index=\"app_eavc\" sourcetype=\"eavc:mc_ds_auth\" earliest=-14d@d\n| fields server, stanza, config, requireAuthentication\n| eval DSAuthenticationInUse = case( \n        stanza==\"broker:broker\" AND (requireAuthentication=0 OR requireAuthentication==\"false\"), \"no\",\n        stanza==\"streams:deployment\" AND (requireAuthentication=0 OR requireAuthentication==\"false\"), \"no\",\n        stanza==\"broker:broker\" AND (requireAuthentication=1 OR requireAuthentication==\"true\"), \"yes\",\n        stanza==\"streams:deployment\" AND (requireAuthentication=1 OR requireAuthentication==\"true\"), \"yes\",\n        1==1, \"unknown\"\n        ) \n    | stats values(DSAuthenticationInUse) AS DSAuthInUse \n    | eval name = \"svd_13_MR\"\n    | eval check = case(\n        DSAuthInUse==\"no\", \"fail\",\n        DSAuthInUse==\"yes\", \"pass\",\n        1==1, \"unknown\"\n         )  \n         | fields name, check]\n\n| eval description = case(\n    name==\"svd_02_MR\", \"All SVDs mitigated\",\n    name==\"svd_03_MR\", \"Manual checks are done\",\n    name==\"svd_04_MR\", \"Indexers are configured to receive encrypted traffic\",\n    name==\"svd_05_MR\", \"Webserver access is secured by HTTPS\",\n    name==\"svd_06_MR\", \"Splunk signatureVersion protocol v2 is used\",\n    name==\"svd_07_MR\", \"PYTHON HTTPS verification is set\",\n    name==\"svd_08_MR\", \"Current Splunk Enterprise version is still supported\",\n    name==\"svd_09_MR\", \"All Universal Forwarder versions are still supported\",\n    name==\"svd_10_MR\", \"All Linux Kernel versions are still supported\",\n    name==\"svd_11_MR\" AND check==\"na\", \" Enterprise Security not installed\",\n    name==\"svd_11_MR\", \"Current version of Enterprise Security supported\",\n    name==\"svd_12_MR\" AND check==\"na\", \"IT Service Intelligence not installed\",\n    name==\"svd_12_MR\", \"Current version of IT Service Intelligence supported\",\n    name==\"svd_13_MR\", \"Deployment Server authentication enabled\",\n    ``` name==\"svd__MR\", \"\", ```\n1==1, \"unknown\"\n    ) \n| table name, description, check \n| rename name AS \"Check Identifier\", check AS Validation, description AS \"Check Description\""
			},
			"name": "svd_combined_report"
		},
		"ds_yOOXDfk6": {
			"type": "ds.chain",
			"options": {
				"extend": "ds_r3Z7SVkG",
				"query": "| eval check = if(count=0, \"pass\", \"fail\")\n| eval name = \"svd_02_MR\"\n|  fields name, check"
			},
			"name": "svd_02_MR-report"
		}
	},
	"defaults": {
		"dataSources": {
			"ds.search": {
				"options": {
					"queryParameters": {
						"latest": "$global_time.latest$",
						"earliest": "$global_time.earliest$"
					}
				}
			}
		}
	},
	"inputs": {
		"input_global_trp": {
			"type": "input.timerange",
			"options": {
				"token": "tok_time",
				"defaultValue": "@d,now"
			},
			"title": "Global Time Range"
		}
	},
	"layout": {
		"type": "grid",
		"options": {
			"width": 1440,
			"height": 960
		},
		"structure": [
			{
				"item": "viz_zjg7t9F4",
				"type": "block",
				"position": {
					"x": 0,
					"y": 0,
					"w": 410,
					"h": 286
				}
			},
			{
				"item": "viz_ahHiaDcy",
				"type": "block",
				"position": {
					"x": 0,
					"y": 286,
					"w": 1440,
					"h": 662
				}
			},
			{
				"item": "viz_0K0rTXva",
				"type": "block",
				"position": {
					"x": 410,
					"y": 0,
					"w": 372,
					"h": 286
				}
			},
			{
				"item": "viz_zZ81wI99",
				"type": "block",
				"position": {
					"x": 782,
					"y": 0,
					"w": 355,
					"h": 286
				}
			},
			{
				"item": "viz_ZclBZhq7",
				"type": "block",
				"position": {
					"x": 1137,
					"y": 0,
					"w": 303,
					"h": 286
				}
			}
		],
		"globalInputs": [
			"input_global_trp"
		]
	},
	"description": "",
	"title": "Mitigation Report"
}
    ]]></definition>
    <meta type="hiddenElements"><![CDATA[
{
	"hideEdit": false,
	"hideOpenInSearch": false,
	"hideExport": false
}
    ]]></meta>
</dashboard>