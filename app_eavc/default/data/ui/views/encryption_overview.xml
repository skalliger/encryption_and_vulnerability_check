
<dashboard version="2" theme="dark">
    <label>Encryption Overview</label>
    <description>General environmental overview. This app is best to be deployed on a MC.</description>
    <definition><![CDATA[
{
	"visualizations": {
		"viz_7gcDIcL4": {
			"type": "splunk.singlevalue",
			"dataSources": {
				"primary": "ds_wJLoZ6Ye"
			},
			"title": "Number of Forwarders sending encrypted traffic",
			"options": {
				"sparklineDisplay": "off",
				"trendDisplay": "off"
			}
		},
		"viz_QNKeK6Eq": {
			"type": "splunk.singlevalue",
			"dataSources": {
				"primary": "ds_6tbTzw9M"
			},
			"title": "Number of Forwarders sending unencrypted traffic",
			"options": {
				"trendDisplay": "off",
				"sparklineDisplay": "off"
			}
		},
		"viz_yKkm5tZs": {
			"type": "splunk.singlevalue",
			"title": "Number of Indexers",
			"dataSources": {
				"primary": "ds_QkCn3bPw"
			},
			"options": {
				"sparklineDisplay": "off",
				"trendDisplay": "off"
			},
			"eventHandlers": [
				{
					"type": "drilldown.linkToDashboard",
					"options": {
						"app": "app_eavc",
						"dashboard": "indexer_status"
					}
				}
			]
		},
		"viz_7lWSsZ57": {
			"type": "splunk.singlevalue",
			"dataSources": {
				"primary": "ds_LRrJLtUn"
			},
			"title": "Number of Indexers with splunktcp-ssl enabled",
			"options": {
				"trendDisplay": "off",
				"sparklineDisplay": "off"
			}
		},
		"viz_H09rfJd0": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_rgvo6TWm"
			},
			"title": "Webserver Activity detected",
			"options": {
				"columnFormat": {
					"Access Type": {
						"data": "> table | seriesByName(\"Access Type\") | formatByType(Access_TypeColumnFormatEditorConfig)",
						"rowColors": "> table | seriesByName('Access Type') | matchValue(Access_TypeRowColorsEditorConfig)"
					}
				}
			},
			"context": {
				"Access_TypeColumnFormatEditorConfig": {
					"string": {
						"unitPosition": "after"
					}
				},
				"Access_TypeRowColorsEditorConfig": [
					{
						"match": "http",
						"value": "#78062a"
					},
					{
						"match": "https",
						"value": "#2f8811"
					}
				]
			}
		},
		"viz_OaMSYBrC": {
			"type": "splunk.table",
			"title": "Signature Versions used",
			"description": "Should be \"v2\" only.",
			"dataSources": {
				"primary": "ds_uHPMqOhA"
			},
			"options": {
				"columnFormat": {
					"signatureVersion": {
						"data": "> table | seriesByName(\"signatureVersion\") | formatByType(signatureVersionColumnFormatEditorConfig)",
						"rowColors": "> table | seriesByName('signatureVersion') | matchValue(signatureVersionRowColorsEditorConfig)"
					}
				}
			},
			"context": {
				"signatureVersionColumnFormatEditorConfig": {
					"string": {
						"unitPosition": "after"
					}
				},
				"signatureVersionRowColorsEditorConfig": [
					{
						"match": "v1,v2",
						"value": "#ad3f20"
					},
					{
						"match": "v2",
						"value": "#2f8811"
					}
				]
			}
		},
		"viz_NOVwuDUA": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_UczsRAvZ"
			},
			"title": "Handling of Legacy Ciphers",
			"description": "Should be changed carefully.",
			"options": {
				"columnFormat": {
					"legacyCiphers": {
						"data": "> table | seriesByName(\"legacyCiphers\") | formatByType(legacyCiphersColumnFormatEditorConfig)",
						"rowColors": "> table | seriesByName('legacyCiphers') | matchValue(legacyCiphersRowColorsEditorConfig)"
					}
				}
			},
			"context": {
				"legacyCiphersColumnFormatEditorConfig": {
					"string": {
						"unitPosition": "after"
					}
				},
				"legacyCiphersRowColorsEditorConfig": [
					{
						"match": "decryptOnly",
						"value": "#ad3f20"
					},
					{
						"match": "disabled",
						"value": "#2f8811"
					}
				]
			}
		},
		"viz_Kj1WH36s": {
			"type": "splunk.table",
			"title": "TLS Verification Settings",
			"dataSources": {
				"primary": "ds_5UBapEny"
			},
			"options": {
				"headerVisibility": "fixed",
				"count": 6,
				"showInternalFields": false,
				"tableFormat": {
					"rowBackgroundColors": "> table | seriesByIndex(0) | pick(tableAltRowBackgroundColorsByTheme)"
				},
				"columnFormat": {
					"cliVerifyServerName": {
						"data": "> table | seriesByName(\"cliVerifyServerName\") | formatByType(cliVerifyServerNameColumnFormatEditorConfig)",
						"rowColors": "> table | seriesByName('cliVerifyServerName') | rangeValue(cliVerifyServerNameRowColorsEditorConfig)"
					},
					"sslVerifyServerCert": {
						"data": "> table | seriesByName(\"sslVerifyServerCert\") | formatByType(sslVerifyServerCertColumnFormatEditorConfig)",
						"rowColors": "> table | seriesByName('sslVerifyServerCert') | rangeValue(sslVerifyServerCertRowColorsEditorConfig)"
					},
					"sslVerifyServerName": {
						"data": "> table | seriesByName(\"sslVerifyServerName\") | formatByType(sslVerifyServerNameColumnFormatEditorConfig)",
						"rowColors": "> table | seriesByName('sslVerifyServerName') | rangeValue(sslVerifyServerNameRowColorsEditorConfig)"
					}
				}
			},
			"description": "server.conf - sslConfig",
			"context": {
				"cliVerifyServerNameColumnFormatEditorConfig": {
					"number": {
						"thousandSeparated": false,
						"unitPosition": "after"
					}
				},
				"sslVerifyServerCertColumnFormatEditorConfig": {
					"number": {
						"thousandSeparated": false,
						"unitPosition": "after"
					}
				},
				"sslVerifyServerCertRowColorsEditorConfig": [
					{
						"value": "#D41F1F",
						"to": 1
					},
					{
						"value": "#118832",
						"from": 1
					}
				],
				"sslVerifyServerNameColumnFormatEditorConfig": {
					"number": {
						"thousandSeparated": false,
						"unitPosition": "after"
					}
				},
				"sslVerifyServerNameRowColorsEditorConfig": [
					{
						"value": "#D41F1F",
						"to": 1
					},
					{
						"value": "#118832",
						"from": 1
					}
				],
				"cliVerifyServerNameRowColorsEditorConfig": [
					{
						"value": "#D41F1F",
						"to": 1
					},
					{
						"value": "#118832",
						"from": 1
					}
				]
			}
		},
		"viz_gmPP4LGr": {
			"type": "splunk.table",
			"title": "TLS Verification Settings",
			"description": "server.conf - kvstore",
			"dataSources": {
				"primary": "ds_Cxho7vYd"
			},
			"options": {
				"showInternalFields": false,
				"columnFormat": {
					"sslVerifyServerCert": {
						"data": "> table | seriesByName(\"sslVerifyServerCert\") | formatByType(sslVerifyServerCertColumnFormatEditorConfig)",
						"rowColors": "> table | seriesByName('sslVerifyServerCert') | rangeValue(sslVerifyServerCertRowColorsEditorConfig)"
					},
					"sslVerifyServerName": {
						"data": "> table | seriesByName(\"sslVerifyServerName\") | formatByType(sslVerifyServerNameColumnFormatEditorConfig)",
						"rowColors": "> table | seriesByName('sslVerifyServerName') | rangeValue(sslVerifyServerNameRowColorsEditorConfig)"
					}
				}
			},
			"context": {
				"sslVerifyServerCertColumnFormatEditorConfig": {
					"number": {
						"thousandSeparated": false,
						"unitPosition": "after"
					}
				},
				"sslVerifyServerCertRowColorsEditorConfig": [
					{
						"value": "#D41F1F",
						"to": 1
					},
					{
						"value": "#118832",
						"from": 1
					}
				],
				"sslVerifyServerNameColumnFormatEditorConfig": {
					"number": {
						"thousandSeparated": false,
						"unitPosition": "after"
					}
				},
				"sslVerifyServerNameRowColorsEditorConfig": [
					{
						"value": "#D41F1F",
						"to": 1
					},
					{
						"value": "#118832",
						"from": 1
					}
				]
			}
		},
		"viz_j2FjNaJC": {
			"type": "splunk.table",
			"title": "TLS Verification Settings",
			"description": "server.conf - pythonSslClientConfig",
			"dataSources": {
				"primary": "ds_CNAXPTqF"
			},
			"options": {
				"showInternalFields": false,
				"columnFormat": {
					"sslVerifyServerCert": {
						"data": "> table | seriesByName(\"sslVerifyServerCert\") | formatByType(sslVerifyServerCertColumnFormatEditorConfig)",
						"rowColors": "> table | seriesByName('sslVerifyServerCert') | rangeValue(sslVerifyServerCertRowColorsEditorConfig)"
					},
					"sslVerifyServerName": {
						"data": "> table | seriesByName(\"sslVerifyServerName\") | formatByType(sslVerifyServerNameColumnFormatEditorConfig)",
						"rowColors": "> table | seriesByName('sslVerifyServerName') | rangeValue(sslVerifyServerNameRowColorsEditorConfig)"
					}
				}
			},
			"context": {
				"sslVerifyServerCertColumnFormatEditorConfig": {
					"number": {
						"thousandSeparated": false,
						"unitPosition": "after"
					}
				},
				"sslVerifyServerCertRowColorsEditorConfig": [
					{
						"value": "#D41F1F",
						"to": 1
					},
					{
						"value": "#118832",
						"from": 1
					}
				],
				"sslVerifyServerNameColumnFormatEditorConfig": {
					"number": {
						"thousandSeparated": false,
						"unitPosition": "after"
					}
				},
				"sslVerifyServerNameRowColorsEditorConfig": [
					{
						"value": "#D41F1F",
						"to": 1
					},
					{
						"value": "#118832",
						"from": 1
					}
				]
			}
		},
		"viz_kX7r6X4l": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_2WGLze9V"
			},
			"title": "Status of PYTHONHTTPS",
			"description": "checks the splunk-launch.conf",
			"options": {
				"columnFormat": {
					"status": {
						"data": "> table | seriesByName(\"status\") | formatByType(statusColumnFormatEditorConfig)",
						"rowColors": "> table | seriesByName('status') | pick(statusRowColorsEditorConfig)",
						"rowBackgroundColors": "> table | seriesByName(\"status\") | rangeValue(statusRowBackgroundColorsEditorConfig)"
					},
					"PYTHONHTTPSVERIFY": {
						"data": "> table | seriesByName(\"PYTHONHTTPSVERIFY\") | formatByType(PYTHONHTTPSVERIFYColumnFormatEditorConfig)",
						"rowColors": "> table | seriesByName('PYTHONHTTPSVERIFY') | rangeValue(PYTHONHTTPSVERIFYRowColorsEditorConfig)"
					}
				}
			},
			"context": {
				"statusColumnFormatEditorConfig": {
					"number": {
						"thousandSeparated": false,
						"unitPosition": "after"
					}
				},
				"statusRowColorsEditorConfig": [
					"#ffffff"
				],
				"statusRowBackgroundColorsEditorConfig": [
					{
						"value": "#D41F1F",
						"to": 1
					},
					{
						"value": "#118832",
						"from": 1
					}
				],
				"PYTHONHTTPSVERIFYColumnFormatEditorConfig": {
					"number": {
						"thousandSeparated": false,
						"unitPosition": "after"
					}
				},
				"PYTHONHTTPSVERIFYRowColorsEditorConfig": [
					{
						"value": "#D41F1F",
						"to": 1
					},
					{
						"value": "#118832",
						"from": 1
					}
				]
			}
		},
		"viz_rr3CBLPE": {
			"type": "splunk.table",
			"title": "Possible TLS-related Configuration Errors",
			"dataSources": {
				"primary": "ds_4pLy9omZ"
			},
			"options": {
				"showInternalFields": false,
				"columnFormat": {
					"_time": {
						"width": 30
					},
					"component": {
						"width": 30
					},
					"host": {
						"width": 30
					},
					"log_level": {
						"width": 30
					}
				}
			}
		}
	},
	"dataSources": {
		"ds_ahRautLV": {
			"type": "ds.search",
			"options": {
				"query": "index=_internal source=*metrics.log* group=tcpin_connections\n| fields hostname, version, sourceIp, destPort, ssl, sourceHost, os, arch\n| dedup hostname ",
				"queryParameters": {
					"earliest": "$tok_time.earliest$",
					"latest": "$tok_time.latest$"
				}
			},
			"name": "Get_All_FWs_tls"
		},
		"ds_QkCn3bPw": {
			"type": "ds.search",
			"options": {
				"query": "index=_internal component=\"Metrics\" instance_roles=*\n| fields - _raw\n| fields server_name, instance_roles\n| dedup server_name\n| regex instance_roles=\"(indexer)\"\n| stats count",
				"queryParameters": {
					"earliest": "$tok_time.earliest$",
					"latest": "$tok_time.latest$"
				}
			},
			"name": "Count_IDX_roles"
		},
		"ds_LRrJLtUn": {
			"type": "ds.search",
			"options": {
				"query": "| rest /services/configs/conf-inputs splunk_server=*\n| search title=\"splunktcp-ssl*\" disabled=0\n| stats count",
				"queryParameters": {
					"earliest": "$tok_time.earliest$",
					"latest": "$tok_time.latest$"
				}
			},
			"name": "Count_IDX_tls"
		},
		"ds_rgvo6TWm": {
			"type": "ds.search",
			"options": {
				"query": "index=_internal sourcetype=splunkd_ui_access referer=* host=\"$tok_host$\"\n| rex field=referer \"(?P<accessType>[^\\:]+)\"\n| where accessType IN (\"http\", \"https\")\n| dedup host, accessType\n| table host, accessType\n| rename host AS \"Host\", accessType AS \"Access Type\"",
				"queryParameters": {
					"earliest": "$tok_time.earliest$",
					"latest": "$tok_time.latest$"
				}
			},
			"name": "Get_web_tls"
		},
		"ds_wJLoZ6Ye": {
			"type": "ds.chain",
			"options": {
				"query": "| fields hostname ssl\n| where ssl LIKE \"true\"\n| stats count",
				"extend": "ds_ahRautLV"
			},
			"name": "count_FW_tls_true"
		},
		"ds_6tbTzw9M": {
			"type": "ds.chain",
			"options": {
				"extend": "ds_ahRautLV",
				"query": "| fields hostname ssl\n| where ssl LIKE \"false\"\n| stats count"
			},
			"name": "count_FW_tls_false"
		},
		"ds_uHPMqOhA": {
			"type": "ds.search",
			"options": {
				"query": "index=\"app_eavc\" sourcetype=\"eavc:mc_sig_version\" server=\"$tok_host$\" \n| eval stanza=\"node_auth\"\n| stats values(sigs) AS \"signatureVersion\" by server, stanza\n|  rename server AS Host, stanza AS \"Stanza\"",
				"queryParameters": {
					"earliest": "$tok_time.earliest$",
					"latest": "$tok_time.latest$"
				}
			},
			"name": "Get_signature_version"
		},
		"ds_UczsRAvZ": {
			"type": "ds.search",
			"options": {
				"query": "| rest /services/configs/conf-server splunk_server=*\n| fields splunk_server, title, legacyCiphers\n| search title=general\n| eval config=\"server.conf\"\n| table splunk_server, config, title, legacyCiphers\n| rename title AS \"Stanza\", splunk_server AS Host",
				"queryParameters": {
					"earliest": "$tok_time.earliest$",
					"latest": "$tok_time.latest$"
				}
			},
			"name": "Get_legacyCiphers"
		},
		"ds_5UBapEny": {
			"type": "ds.chain",
			"options": {
				"extend": "ds_IVIGB8Kt",
				"query": "| fields stanza, server, *Verify* \n| search stanza IN (\"sslConfig\") \n``` 3.0.5 fix for sslVerifyServerCert not being set by default ```\n| fillnull value=0 sslVerifyServerCert\n| stats values(svd_id) AS svds by server, stanza, cliVerifyServerName, sslVerifyServerCert, sslVerifyServerName\n| fields - svds\n| rename server AS Host, stanza AS Stanza"
			},
			"name": "query_sslConfig"
		},
		"ds_Cxho7vYd": {
			"type": "ds.chain",
			"options": {
				"extend": "ds_IVIGB8Kt",
				"query": "| fields stanza, server, sslVerify* \n| search stanza IN (\"kvstore\") \n| stats values(svd_id) AS svds by server, stanza, sslVerifyServerCert, sslVerifyServerName\n| fields - svds\n| rename server AS Host, stanza AS Stanza"
			},
			"name": "query_KVstore"
		},
		"ds_CNAXPTqF": {
			"type": "ds.chain",
			"options": {
				"extend": "ds_IVIGB8Kt",
				"query": "| fields stanza, server, sslVerify* \n| search stanza IN (\"pythonSslClientConfig\") \n| stats values(svd_id) AS svds by server, stanza, sslVerifyServerCert, sslVerifyServerName\n| fields - svds\n| rename server AS Host, stanza AS Stanza"
			},
			"name": "query_pythonSsl"
		},
		"ds_2WGLze9V": {
			"type": "ds.chain",
			"options": {
				"query": "index=app_eavc sourcetype=\"eavc:python_https\" host=\"$tok_host$\" | fields host, PYTHONHTTPSVERIFY\n| stats values(PYTHONHTTPSVERIFY) AS PYTHONHTTPSVERIFY by host"
			},
			"name": "get_PythonHTTPS"
		},
		"ds_4pLy9omZ": {
			"type": "ds.search",
			"options": {
				"query": "index=_internal sourcetype=splunkd log_level IN (\"ERROR\", \"WARN\", \"WARNING\") host=\"$tok_host$\" component IN (\"KVStoreConfigurationProvider\", \"x509\", \"x509verify\", \"sslcommon\", \"TcpInputProc\", \"TcpOutputFd\", \"ApplicationUpdateThread\")  \"no start line\" OR \"no shared cipher\" OR \"IP address mismatch\" OR \"password\" OR \"certificate verify failed\" OR \"unknown protocol\" OR \"error 18 at 0 depth\" OR \"not in server certificate\" OR \"ssl error\" OR \"x509 certificate\" OR \"unknown CA\" OR \"unable to get local issuer certificate\"\n|  table _time, host, component, log_level, event_message\n|  table _time, host, component, log_level, event_message",
				"queryParameters": {
					"earliest": "-24h@h",
					"latest": "now"
				}
			},
			"name": "Config_errors"
		},
		"ds_IVIGB8Kt": {
			"type": "ds.search",
			"options": {
				"query": "index=\"app_eavc\" sourcetype=\"eavc:mc_tls_verification\" stanza=\"*\" server=\"$tok_host$\"\n| fields *",
				"queryParameters": {
					"earliest": "$tok_time.earliest$",
					"latest": "$tok_time.latest$"
				}
			},
			"name": "query_tls_verification_sourcetype"
		}
	},
	"defaults": {
		"dataSources": {
			"ds.search": {
				"options": {
					"queryParameters": {
						"latest": "$global_time.latest$",
						"earliest": "$global_time.earliest$"
					}
				}
			}
		}
	},
	"inputs": {
		"input_global_trp": {
			"type": "input.timerange",
			"options": {
				"token": "tok_time",
				"defaultValue": "-14d@h,now"
			},
			"title": "Time Range"
		},
		"input_b98fefpE": {
			"options": {
				"defaultValue": "*",
				"token": "tok_host"
			},
			"title": "Filter Host",
			"type": "input.text"
		}
	},
	"layout": {
		"type": "grid",
		"options": {},
		"structure": [
			{
				"item": "viz_yKkm5tZs",
				"type": "block",
				"position": {
					"x": 0,
					"y": 0,
					"w": 284,
					"h": 138
				}
			},
			{
				"item": "viz_H09rfJd0",
				"type": "block",
				"position": {
					"x": 0,
					"y": 138,
					"w": 284,
					"h": 385
				}
			},
			{
				"item": "viz_j2FjNaJC",
				"type": "block",
				"position": {
					"x": 0,
					"y": 523,
					"w": 544,
					"h": 358
				}
			},
			{
				"item": "viz_kX7r6X4l",
				"type": "block",
				"position": {
					"x": 0,
					"y": 881,
					"w": 544,
					"h": 438
				}
			},
			{
				"item": "viz_rr3CBLPE",
				"type": "block",
				"position": {
					"x": 0,
					"y": 1319,
					"w": 1200,
					"h": 555
				}
			},
			{
				"item": "viz_7lWSsZ57",
				"type": "block",
				"position": {
					"x": 284,
					"y": 0,
					"w": 316,
					"h": 138
				}
			},
			{
				"item": "viz_OaMSYBrC",
				"type": "block",
				"position": {
					"x": 284,
					"y": 138,
					"w": 467,
					"h": 385
				}
			},
			{
				"item": "viz_gmPP4LGr",
				"type": "block",
				"position": {
					"x": 544,
					"y": 523,
					"w": 656,
					"h": 358
				}
			},
			{
				"item": "viz_Kj1WH36s",
				"type": "block",
				"position": {
					"x": 544,
					"y": 881,
					"w": 656,
					"h": 438
				}
			},
			{
				"item": "viz_7gcDIcL4",
				"type": "block",
				"position": {
					"x": 600,
					"y": 0,
					"w": 300,
					"h": 138
				}
			},
			{
				"item": "viz_NOVwuDUA",
				"type": "block",
				"position": {
					"x": 751,
					"y": 138,
					"w": 449,
					"h": 385
				}
			},
			{
				"item": "viz_QNKeK6Eq",
				"type": "block",
				"position": {
					"x": 900,
					"y": 0,
					"w": 300,
					"h": 138
				}
			}
		],
		"globalInputs": [
			"input_global_trp",
			"input_b98fefpE"
		]
	},
	"description": "General environmental overview. This app is best to be deployed on a MC.",
	"title": "Encryption Overview"
}
    ]]></definition>
    <meta type="hiddenElements"><![CDATA[
{
	"hideEdit": false,
	"hideOpenInSearch": false,
	"hideExport": true
}
    ]]></meta>
</dashboard>