#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

SCRIPTVERSION="1.3"
LASTUPDATED="2024-08-31"
AUTHOR="Dustin Hoffmann"

### the Splunk server needs a connection to https://raw.githubusercontent.com in order to work

# this script checks for new SVDs in the lookup tables and if it finds new ones, it overwrites the existing lookups
init()
{
	appPath="${SPLUNK_HOME}/etc/apps/app_eavc"
	lookupPath="${appPath}/lookups"
	tmpDir="${appPath}/tmp"
	rawGitLocation="https://raw.githubusercontent.com/skalliger/encryption_and_vulnerability_check/main/app_eavc/lookups"

	svdMitigations="svd_mitigations.csv"
	svdAppLabels="svd_app_label_correlation.csv"
	linuxKernels="linux_kernel_versions.csv"

	getMD5_current_SVD_M="$(md5sum $lookupPath/$svdMitigations | awk '{ print $1 }')"
	getMD5_current_SVD_app_lines="$(md5sum $lookupPath/$svdAppLabels | awk '{ print $1 }')"
	getMD5_current_linux_kernels="$(md5sum $lookupPath/$linuxKernels | awk '{ print $1 }')"
}

### function calls
main()
{
	createTempDir

	pullSVDMitigations
	pullSVDAppLabels
	pullKernelVersions
	
	compare_SVD_Mitigation_Tables
	compare_SVD_AppLabel_Tables
	compare_Linux_Kernel_Tables

	deleteTempDir
}

compare_SVD_Mitigation_Tables()
{
	getMD5_downloaded_SVD_M="$(md5sum $tmpDir/$svdMitigations | awk '{ print $1 }')"
	if [ "$getMD5_current_SVD_M" == "$getMD5_downloaded_SVD_M" ]
		then
			return 0
		else
			eval cp ${tmpDir}/${svdMitigations} ${lookupPath}/${svdMitigations}
	fi
}

compare_SVD_AppLabel_Tables()
{
	getMD5_downloaded_SVD_app_lines="$(md5sum $tmpDir/$svdAppLabels | awk '{ print $1 }')"
	if [ "$getMD5_current_SVD_app_lines" == "$getMD5_downloaded_SVD_app_lines" ]
		then
			return 0
		else
			eval cp ${tmpDir}/${svdAppLabels} ${lookupPath}/${svdAppLabels}
	fi
}

compare_Linux_Kernel_Tables()
{
	getMD5_downloaded_linux_kernels="$(md5sum $tmpDir/$svdAppLabels | awk '{ print $1 }')"
	if [ "$getMD5_current_linux_kernels" == "$getMD5_downloaded_linux_kernels" ]
		then
			return 0
		else
			eval cp ${tmpDir}/${linuxKernels} ${lookupPath}/${linuxKernels}
	fi
}

createTempDir()
{
	mktemp -d $tmpDir 2>/dev/null
}

deleteTempDir()
{
	rm -r $tmpDir
}

pullSVDMitigations()
{
	eval wget ${rawGitLocation}/${svdMitigations} -O $tmpDir/$svdMitigations 2> /dev/null
}

pullSVDAppLabels()
{
	eval wget ${rawGitLocation}/${svdAppLabels} -O $tmpDir/$svdAppLabels 2> /dev/null
}

pullKernelVersions()
{
	eval wget ${rawGitLocation}/${linuxKernels} -O $tmpDir/$svdAppLabels 2> /dev/null
}

init $@
main $?

