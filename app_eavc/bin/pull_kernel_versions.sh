#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

SCRIPTVERSION="0.9"
LASTUPDATED="2024-09-04"
AUTHOR="Dustin Hoffmann"

### the Splunk server needs a connection to https://endoflife.date in order to work

# this script checks for new a new version of the kernel end of life JSON
init()
{
	appPath="${SPLUNK_HOME}/etc/apps/app_eavc"
	lookupPath="${appPath}/lookups"
	tmpDir="${appPath}/tmp"
	rawGitLocation="https://raw.githubusercontent.com/skalliger/encryption_and_vulnerability_check/main/app_eavc/lookups"

	kernelVersions="linux_kernel_versions.csv"

	getMD5_current="$(md5sum $lookupPath/$kernelVersions | awk '{ print $1 }')"

}


### function calls
main()
{
        createTempDir
        pullKernelVersions
        compareKernelVersions
        deleteTempDir
}

compareKernelVersions()
{
        getMD5_downloaded="$(md5sum $tmpDir/$kernelVersions | awk '{ print $1 }')"
        if [ "$getMD5_current" == "$getMD5_downloaded" ]
                then
                        #printf "MD5 sums are matching. No replacement. \n"
                        return 0
                else
                        eval cp ${tmpDir}/${kernelVersions} ${lookupPath}/${kernelVersions}
                        eval cp ${tmpDir}/${kernelVersions} ${lookupPath}/${kernelVersions}
        fi


}

createTempDir()
{
        #printf "DEBUG: Creating $tmpDir \n"
        mktemp -d $tmpDir 2>/dev/null
}

deleteTempDir()
{
        #printf "DEBUG: deleting $tmpDir \n"
        rm -r $tmpDir
}

pullKernelVersions()
{
        eval wget ${rawGitLocation}/${kernelVersions} -O $tmpDir/$kernelVersions 2> /dev/null
        #printf "DEBUG: Downloaded $kernelVersions \n"
}



init $@
main $?
