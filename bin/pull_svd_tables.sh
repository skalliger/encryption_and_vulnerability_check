#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

SCRIPTVERSION="1.1"
LASTUPDATED="2023-06-06"
AUTHOR="Dustin Hoffmann"

### the Splunk server needs a connection to https://*.github.com in order to work

# this script checks for new SVDs in the lookup tables and if it finds new ones, it overwrites the existing lookups
init()
{
	appPath="${SPLUNK_HOME}/etc/apps/encryption_and_vulnerability_check"
	lookupPath="${appPath}/lookups"
	tmpDir="${appPath}/tmp"
	rawGitLocation="https://raw.githubusercontent.com/skalliger/encryption_and_vulnerability_check/main/lookups"

	svdMitigations="svd_mitigations.csv"
	svdAppLabels="svd_app_label_correlation.csv"

	count_current_SVD_M_lines="$(cat $lookupPath/$svdMitigations | wc -l)"
	count_current_SVD_app_lines="$(cat $lookupPath/$svdAppLabels | wc -l)"

	getMD5_current_SVD_M="$(md5sum $lookupPath/$svdMitigations | awk '{ print $1 }')"
	getMD5_current_SVD_app_lines="$(md5sum $lookupPath/$svdAppLabels | awk '{ print $1 }')"

	count_git_SVD_M_lines="0"
	count_git_SVD_app_lines="0"
}


### function calls
main()
{
	createTempDir

	pullSVDMitigations
	pullSVDAppLabels

	compare_SVD_Mitigation_Tables
	compare_SVD_AppLabel_Tables

	deleteTempDir
}

compare_SVD_Mitigation_Tables()
{
	if [ "$count_current_SVD_M_lines" == "$count_git_SVD_M_lines" ]
		then
			#printf "DEBUG: No line differences in $svdMitigations \n"
			getMD5_downloaded_SVD_M="$(md5sum $tmpDir/$svdMitigations | awk '{ print $1 }')"
			if [ "$getMD5_current_SVD_M" == "$getMD5_downloaded_SVD_M" ]
				then
					#printf "MD5 sums are matching. No replacement. \n"
					return 0
			else
				#printf "DEBUG: replacing due to md5 mismatch - $lookupPath/$svdTable by $tmpDir/$svdTable \n"
				eval cp ${tmpDir}/${svdMitigations} ${lookupPath}/${svdMitigations}
				#printf "\n md5sum getMD5_current_SVD_M: $getMD5_current_SVD_M \n"
				#printf "md5sum getMD5_downloaded_SVD_M: $getMD5_downloaded_SVD_M \n"
			fi

	else
		eval cp ${tmpDir}/${svdMitigations} ${lookupPath}/${svdMitigations}
		#printf "DEBUG: replacing $lookupPath/$svdMitigations by $tmpDir/$svdMitigations \n"
	fi
}

compare_SVD_AppLabel_Tables()
{
	if [ "$count_current_SVD_app_lines" == "$count_git_SVD_app_lines" ]
		then
			#printf "DEBUG: No line differences in $svdAppLabels \n"
			getMD5_downloaded_SVD_app_lines="$(md5sum $tmpDir/$svdAppLabels | awk '{ print $1 }')"
			if [ "$getMD5_current_SVD_app_lines" == "$getMD5_downloaded_SVD_app_lines" ]
				then
					#printf "MD5 sums are matching. No replacement. \n"
					return 0
			else
				#printf "DEBUG: replacing due to md5 mismatch - $lookupPath/$svdAppLabels by $tmpDir/$svdAppLabels \n"
				eval cp ${tmpDir}/${svdAppLabels} ${lookupPath}/${svdAppLabels}
				#printf "\n md5sum getMD5_current_SVD_app_lines: $getMD5_current_SVD_app_lines \n"
				#printf "md5sum getMD5_downloaded_SVD_app_lines: $getMD5_downloaded_SVD_app_lines \n"
			fi
	else
		eval cp ${tmpDir}/${svdAppLabels} ${lookupPath}/${svdAppLabels}
		#printf "DEBUG: replacing $lookupPath/$svdAppLabels by $tmpDir/$svdAppLabels \n"
	fi
}

createTempDir()
{
	#printf "DEBUG: Creating $tmpDir \n"
	mkdir $tmpDir
}

deleteTempDir()
{
	#printf "DEBUG: deleting $tmpDir \n"
	rm -r $tmpDir
}

pullSVDMitigations()
{
	eval wget ${rawGitLocation}/${svdMitigations} -O $tmpDir/$svdMitigations 2> /dev/null
	#printf "DEBUG: Downloaded $svdMitigations \n"
	count_git_SVD_M_lines="$(cat ${tmpDir}/${svdMitigations} | wc -l)"
}

pullSVDAppLabels()
{
	eval wget ${rawGitLocation}/${svdAppLabels} -O $tmpDir/$svdAppLabels 2> /dev/null
	#printf "DEBUG: Downloaded $svdAppLabels \n"
	count_git_SVD_app_lines="$(cat ${tmpDir}/${svdAppLabels} | wc -l)"
}

init $@
main $?

