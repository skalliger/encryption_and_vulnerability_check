[SA-mc_eavc_populate_server_roles]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = * */12 * * *
dispatch.earliest_time = -15d@d
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.page.search.mode = verbose
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = SA-mc_eavc
request.ui_dispatch_view = search
search = | rest /services/server/roles splunk_server=* \
``` Unfortunately we need to make this search longer than it needs to be, due to having old roles "cluster master", "cluster slave" and "license master"\
but this is confusing, so we expand, remove and write afterwards```\
| append [ | search index="app_eavc" sourcetype="eavc:mc_server_roles" earliest=-15d@d | stats c AS counter | where counter=0 | require ]\
| stats values(role_list) AS roles by splunk_server\
| mvexpand roles\
``` this is intentional to avoid confusion with the actual splunk_server field ```\
| rename splunk_server AS server\
| search NOT roles IN ("cluster_master", "cluster_slave", "license_master")\
| collect index="app_eavc" sourcetype="eavc:mc_server_roles"

[SA-mc_eavc_populate_ds_auth]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = * */12 * * *
dispatch.earliest_time = -15d@d
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.page.search.mode = verbose
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = SA-mc_eavc
request.ui_dispatch_view = search
search = | rest /services/configs/conf-restmap splunk_server=* \
    ``` join to only get the DS ``` \
| append [ | search index="app_eavc" sourcetype="eavc:mc_ds_auth" earliest=-15d@d | stats c AS counter | where counter=0 | require ]\
| join splunk_server \
    [| rest /services/server/roles splunk_server=* \
    | search role_list=deployment_server \
    | fields splunk_server ] \
| fields title, splunk_server, requireAuthentication \
| search title="broker:broker" OR title="streams:deployment" \
| eval config="restmap.conf" \
| table splunk_server, config, title, requireAuthentication \
| rename title AS stanza, splunk_server AS server\
| collect index="app_eavc" sourcetype="eavc:mc_ds_auth"

[SA-mc_eavc_populate_apps]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = * */12 * * *
dispatch.earliest_time = -7d@d
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.page.search.mode = verbose
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = SA-mc_eavc
request.ui_dispatch_view = search
search = | rest /services/apps/local splunk_server=* \
| fields label, version, splunk_server, title, disabled\
``` we keep app_eavc data for 14 days only and it's not a lot\
but we search 15 days just in case. \
| require will check whether there are events found in the eavc:sa_mc_apps sourcetype. If so, the parent search will stop and we don't generate duplicate events ```\
| join type=left title [ | search index=app_eavc sourcetype="eavc:sa_mc_apps" earliest=-15d@d latest=now | stats c AS counter | where counter=0 | require ]\
| search NOT label IN ("journald_input", "Splunk Get Data In" "Home", "learned", "legacy", "Splunk Assist", "Apps Browser", "*Forwarder", "Instrumentation", "*Alert Action", "Search & Reporting", "introspection*", "sample data", "*RapidDiag", "SA-ITSI*" ) AND (disabled="0" OR disabled="false")\
| eval version = if(isnull(version), "unknown", version)\
| table splunk_server, label, title, version, disabled\
| rename splunk_server AS server\
| collect index="app_eavc" sourcetype="eavc:sa_mc_apps"
