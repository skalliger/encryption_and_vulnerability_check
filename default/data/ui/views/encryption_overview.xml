
<dashboard version="2" theme="dark">
    <label>Encryption Overview</label>
    <description>General environmental overview. This app is best to be deployed on a MC.</description>
    <definition><![CDATA[
{
	"visualizations": {
		"viz_7gcDIcL4": {
			"type": "splunk.singlevalue",
			"dataSources": {
				"primary": "ds_wJLoZ6Ye"
			},
			"title": "Number of Forwarders sending encrypted traffic",
			"options": {
				"sparklineDisplay": "off",
				"trendDisplay": "off"
			}
		},
		"viz_QNKeK6Eq": {
			"type": "splunk.singlevalue",
			"dataSources": {
				"primary": "ds_6tbTzw9M"
			},
			"title": "Number of Forwarders sending unencrypted traffic",
			"options": {
				"trendDisplay": "off",
				"sparklineDisplay": "off"
			}
		},
		"viz_yKkm5tZs": {
			"type": "splunk.singlevalue",
			"title": "Number of Indexers",
			"dataSources": {
				"primary": "ds_QkCn3bPw"
			},
			"options": {
				"sparklineDisplay": "off",
				"trendDisplay": "off"
			}
		},
		"viz_7lWSsZ57": {
			"type": "splunk.singlevalue",
			"dataSources": {
				"primary": "ds_LRrJLtUn"
			},
			"title": "Number of Indexers with splunktcp-ssl enabled",
			"options": {
				"trendDisplay": "off",
				"sparklineDisplay": "off"
			}
		},
		"viz_H09rfJd0": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_rgvo6TWm"
			},
			"title": "Webserver Activity detected",
			"options": {
				"columnFormat": {
					"Access Type": {
						"data": "> table | seriesByName(\"Access Type\") | formatByType(Access_TypeColumnFormatEditorConfig)",
						"rowColors": "> table | seriesByName('Access Type') | pick(Access_TypeRowColorsEditorConfig)",
						"rowBackgroundColors": "> table | seriesByName('Access Type') | matchValue(Access_TypeRowBackgroundColorsEditorConfig)"
					}
				}
			},
			"context": {
				"Access_TypeColumnFormatEditorConfig": {
					"string": {
						"unitPosition": "after"
					}
				},
				"Access_TypeRowColorsEditorConfig": [
					"#ffffff"
				],
				"Access_TypeRowBackgroundColorsEditorConfig": [
					{
						"match": "http",
						"value": "#78062a"
					},
					{
						"match": "https",
						"value": "#2f8811"
					}
				]
			}
		},
		"viz_OaMSYBrC": {
			"type": "splunk.table",
			"title": "Signature Versions used",
			"description": "Should be \"v2\" only.",
			"dataSources": {
				"primary": "ds_uHPMqOhA"
			},
			"options": {
				"columnFormat": {
					"signatureVersion": {
						"data": "> table | seriesByName(\"signatureVersion\") | formatByType(signatureVersionColumnFormatEditorConfig)",
						"rowColors": "> table | seriesByName('signatureVersion') | pick(signatureVersionRowColorsEditorConfig)",
						"rowBackgroundColors": "> table | seriesByName(\"signatureVersion\") | matchValue(signatureVersionRowBackgroundColorsEditorConfig)"
					}
				}
			},
			"context": {
				"signatureVersionColumnFormatEditorConfig": {
					"string": {
						"unitPosition": "after"
					}
				},
				"signatureVersionRowColorsEditorConfig": [
					"#ffffff"
				],
				"signatureVersionRowBackgroundColorsEditorConfig": [
					{
						"match": "v1,v2",
						"value": "#ad3f20"
					},
					{
						"match": "v2",
						"value": "#2f8811"
					}
				]
			}
		},
		"viz_NOVwuDUA": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_UczsRAvZ"
			},
			"title": "Handling of Legacy Ciphers",
			"description": "Should be changed carefully.",
			"options": {
				"columnFormat": {
					"legacyCiphers": {
						"data": "> table | seriesByName(\"legacyCiphers\") | formatByType(legacyCiphersColumnFormatEditorConfig)",
						"rowColors": "> table | seriesByName('legacyCiphers') | pick(legacyCiphersRowColorsEditorConfig)",
						"rowBackgroundColors": "> table | seriesByName(\"legacyCiphers\") | matchValue(legacyCiphersRowBackgroundColorsEditorConfig)"
					}
				}
			},
			"context": {
				"legacyCiphersColumnFormatEditorConfig": {
					"string": {
						"unitPosition": "after"
					}
				},
				"legacyCiphersRowColorsEditorConfig": [
					"#ffffff"
				],
				"legacyCiphersRowBackgroundColorsEditorConfig": [
					{
						"match": "decryptOnly",
						"value": "#ad3f20"
					},
					{
						"match": "disabled",
						"value": "#2f8811"
					}
				]
			}
		},
		"viz_Kj1WH36s": {
			"type": "splunk.table",
			"title": "TLS Verification Settings",
			"dataSources": {
				"primary": "ds_5UBapEny"
			},
			"options": {
				"headerVisibility": "fixed",
				"count": 6,
				"showInternalFields": false,
				"tableFormat": {
					"rowBackgroundColors": "> table | seriesByIndex(0) | pick(tableAltRowBackgroundColorsByTheme)"
				},
				"columnFormat": {
					"cliVerifyServerName": {
						"data": "> table | seriesByName(\"cliVerifyServerName\") | formatByType(cliVerifyServerNameColumnFormatEditorConfig)",
						"rowColors": "> table | seriesByName('cliVerifyServerName') | pick(cliVerifyServerNameRowColorsEditorConfig)",
						"rowBackgroundColors": "> table | seriesByName(\"cliVerifyServerName\") | rangeValue(cliVerifyServerNameRowBackgroundColorsEditorConfig)"
					},
					"sslVerifyServerCert": {
						"data": "> table | seriesByName(\"sslVerifyServerCert\") | formatByType(sslVerifyServerCertColumnFormatEditorConfig)",
						"rowColors": "> table | seriesByName('sslVerifyServerCert') | pick(sslVerifyServerCertRowColorsEditorConfig)",
						"rowBackgroundColors": "> table | seriesByName(\"sslVerifyServerCert\") | rangeValue(sslVerifyServerCertRowBackgroundColorsEditorConfig)"
					},
					"sslVerifyServerName": {
						"data": "> table | seriesByName(\"sslVerifyServerName\") | formatByType(sslVerifyServerNameColumnFormatEditorConfig)",
						"rowColors": "> table | seriesByName('sslVerifyServerName') | pick(sslVerifyServerNameRowColorsEditorConfig)",
						"rowBackgroundColors": "> table | seriesByName(\"sslVerifyServerName\") | rangeValue(sslVerifyServerNameRowBackgroundColorsEditorConfig)"
					}
				}
			},
			"description": "server.conf - sslConfig",
			"context": {
				"cliVerifyServerNameColumnFormatEditorConfig": {
					"number": {
						"thousandSeparated": false,
						"unitPosition": "after"
					}
				},
				"sslVerifyServerCertColumnFormatEditorConfig": {
					"number": {
						"thousandSeparated": false,
						"unitPosition": "after"
					}
				},
				"sslVerifyServerCertRowColorsEditorConfig": [
					"#ffffff"
				],
				"sslVerifyServerNameColumnFormatEditorConfig": {
					"number": {
						"thousandSeparated": false,
						"unitPosition": "after"
					}
				},
				"sslVerifyServerNameRowColorsEditorConfig": [
					"#ffffff"
				],
				"sslVerifyServerNameRowBackgroundColorsEditorConfig": [
					{
						"value": "#D41F1F",
						"to": 1
					},
					{
						"value": "#118832",
						"from": 1
					}
				],
				"sslVerifyServerCertRowBackgroundColorsEditorConfig": [
					{
						"value": "#D41F1F",
						"to": 1
					},
					{
						"value": "#118832",
						"from": 1
					}
				],
				"cliVerifyServerNameRowColorsEditorConfig": [
					"#ffffff"
				],
				"cliVerifyServerNameRowBackgroundColorsEditorConfig": [
					{
						"value": "#D41F1F",
						"to": 1
					},
					{
						"value": "#118832",
						"from": 1
					}
				]
			}
		},
		"viz_gmPP4LGr": {
			"type": "splunk.table",
			"title": "TLS Verification Settings",
			"description": "server.conf - kvstore",
			"dataSources": {
				"primary": "ds_Cxho7vYd"
			},
			"options": {
				"showInternalFields": false,
				"columnFormat": {
					"sslVerifyServerCert": {
						"data": "> table | seriesByName(\"sslVerifyServerCert\") | formatByType(sslVerifyServerCertColumnFormatEditorConfig)",
						"rowColors": "> table | seriesByName('sslVerifyServerCert') | pick(sslVerifyServerCertRowColorsEditorConfig)",
						"rowBackgroundColors": "> table | seriesByName('sslVerifyServerCert') | rangeValue(sslVerifyServerCertRowBackgroundColorsEditorConfig)"
					},
					"sslVerifyServerName": {
						"data": "> table | seriesByName(\"sslVerifyServerName\") | formatByType(sslVerifyServerNameColumnFormatEditorConfig)",
						"rowColors": "> table | seriesByName('sslVerifyServerName') | pick(sslVerifyServerNameRowColorsEditorConfig)",
						"rowBackgroundColors": "> table | seriesByName('sslVerifyServerName') | rangeValue(sslVerifyServerNameRowBackgroundColorsEditorConfig)"
					}
				}
			},
			"context": {
				"sslVerifyServerCertColumnFormatEditorConfig": {
					"number": {
						"thousandSeparated": false,
						"unitPosition": "after"
					}
				},
				"sslVerifyServerCertRowColorsEditorConfig": [
					"#ffffff"
				],
				"sslVerifyServerNameColumnFormatEditorConfig": {
					"number": {
						"thousandSeparated": false,
						"unitPosition": "after"
					}
				},
				"sslVerifyServerNameRowColorsEditorConfig": [
					"#ffffff"
				],
				"sslVerifyServerCertRowBackgroundColorsEditorConfig": [
					{
						"value": "#D41F1F",
						"to": 1
					},
					{
						"value": "#118832",
						"from": 1
					}
				],
				"sslVerifyServerNameRowBackgroundColorsEditorConfig": [
					{
						"value": "#D41F1F",
						"to": 1
					},
					{
						"value": "#118832",
						"from": 1
					}
				]
			}
		},
		"viz_j2FjNaJC": {
			"type": "splunk.table",
			"title": "TLS Verification Settings",
			"description": "server.conf - pythonSslClientConfig",
			"dataSources": {
				"primary": "ds_CNAXPTqF"
			},
			"options": {
				"showInternalFields": false,
				"columnFormat": {
					"sslVerifyServerCert": {
						"data": "> table | seriesByName(\"sslVerifyServerCert\") | formatByType(sslVerifyServerCertColumnFormatEditorConfig)",
						"rowColors": "> table | seriesByName('sslVerifyServerCert') | pick(sslVerifyServerCertRowColorsEditorConfig)",
						"rowBackgroundColors": "> table | seriesByName('sslVerifyServerCert') | rangeValue(sslVerifyServerCertRowBackgroundColorsEditorConfig)"
					},
					"sslVerifyServerName": {
						"data": "> table | seriesByName(\"sslVerifyServerName\") | formatByType(sslVerifyServerNameColumnFormatEditorConfig)",
						"rowColors": "> table | seriesByName('sslVerifyServerName') | pick(sslVerifyServerNameRowColorsEditorConfig)",
						"rowBackgroundColors": "> table | seriesByName('sslVerifyServerName') | rangeValue(sslVerifyServerNameRowBackgroundColorsEditorConfig)"
					}
				}
			},
			"context": {
				"sslVerifyServerCertColumnFormatEditorConfig": {
					"number": {
						"thousandSeparated": false,
						"unitPosition": "after"
					}
				},
				"sslVerifyServerCertRowColorsEditorConfig": [
					"#ffffff"
				],
				"sslVerifyServerNameColumnFormatEditorConfig": {
					"number": {
						"thousandSeparated": false,
						"unitPosition": "after"
					}
				},
				"sslVerifyServerNameRowColorsEditorConfig": [
					"#ffffff"
				],
				"sslVerifyServerCertRowBackgroundColorsEditorConfig": [
					{
						"value": "#D41F1F",
						"to": 1
					},
					{
						"value": "#118832",
						"from": 1
					}
				],
				"sslVerifyServerNameRowBackgroundColorsEditorConfig": [
					{
						"value": "#D41F1F",
						"to": 1
					},
					{
						"value": "#118832",
						"from": 1
					}
				]
			}
		},
		"viz_kX7r6X4l": {
			"type": "splunk.table",
			"dataSources": {
				"primary": "ds_2WGLze9V"
			},
			"title": "Status of PYTHONHTTPS",
			"description": "checks the splunk-launch.conf",
			"options": {
				"columnFormat": {
					"status": {
						"data": "> table | seriesByName(\"status\") | formatByType(statusColumnFormatEditorConfig)",
						"rowColors": "> table | seriesByName('status') | pick(statusRowColorsEditorConfig)",
						"rowBackgroundColors": "> table | seriesByName(\"status\") | rangeValue(statusRowBackgroundColorsEditorConfig)"
					}
				}
			},
			"context": {
				"statusColumnFormatEditorConfig": {
					"number": {
						"thousandSeparated": false,
						"unitPosition": "after"
					}
				},
				"statusRowColorsEditorConfig": [
					"#ffffff"
				],
				"statusRowBackgroundColorsEditorConfig": [
					{
						"value": "#D41F1F",
						"to": 1
					},
					{
						"value": "#118832",
						"from": 1
					}
				]
			}
		},
		"viz_rr3CBLPE": {
			"type": "splunk.table",
			"title": "Possible Configuration Errors",
			"dataSources": {
				"primary": "ds_4pLy9omZ"
			},
			"options": {
				"showInternalFields": false,
				"columnFormat": {
					"_time": {
						"width": 237
					},
					"component": {
						"width": 291
					},
					"host": {
						"width": 250
					},
					"log_level": {
						"width": 211
					}
				}
			}
		}
	},
	"dataSources": {
		"ds_ahRautLV": {
			"type": "ds.search",
			"options": {
				"query": "index=_internal source=*metrics.log* group=tcpin_connections\n| fields hostname, version, sourceIp, destPort, ssl, sourceHost, os, arch\n| dedup hostname ",
				"queryParameters": {
					"earliest": "$tok_time.earliest$",
					"latest": "$tok_time.latest$"
				}
			},
			"name": "Get_All_FWs_tls"
		},
		"ds_QkCn3bPw": {
			"type": "ds.search",
			"options": {
				"query": "index=_internal component=\"Metrics\" instance_roles=*\n| fields - _raw\n| fields server_name, instance_roles\n| dedup server_name\n| regex instance_roles=\"(indexer)\"\n| stats count",
				"queryParameters": {
					"earliest": "$tok_time.earliest$",
					"latest": "$tok_time.latest$"
				}
			},
			"name": "Count_IDX_roles"
		},
		"ds_LRrJLtUn": {
			"type": "ds.search",
			"options": {
				"query": "| rest /services/configs/conf-inputs splunk_server=*\n| search title=\"splunktcp-ssl*\" disabled=0\n| stats count",
				"queryParameters": {
					"earliest": "$tok_time.earliest$",
					"latest": "$tok_time.latest$"
				}
			},
			"name": "Count_IDX_tls"
		},
		"ds_rgvo6TWm": {
			"type": "ds.search",
			"options": {
				"query": "index=_internal sourcetype=splunkd_ui_access referer=*\n| rex field=referer \"(?P<accessType>[^\\:]+)\"\n| where accessType IN (\"http\", \"https\")\n| dedup host, accessType\n| table host, accessType\n| rename host AS \"Splunk Server\", accessType AS \"Access Type\"",
				"queryParameters": {
					"earliest": "$tok_time.earliest$",
					"latest": "$tok_time.latest$"
				}
			},
			"name": "Get_web_tls"
		},
		"ds_wJLoZ6Ye": {
			"type": "ds.chain",
			"options": {
				"query": "| fields hostname ssl\n| where ssl LIKE \"true\"\n| stats count",
				"extend": "ds_ahRautLV"
			},
			"name": "count_FW_tls_true"
		},
		"ds_6tbTzw9M": {
			"type": "ds.chain",
			"options": {
				"extend": "ds_ahRautLV",
				"query": "| fields hostname ssl\n| where ssl LIKE \"false\"\n| stats count"
			},
			"name": "count_FW_tls_false"
		},
		"ds_uHPMqOhA": {
			"type": "ds.search",
			"options": {
				"query": "| rest /services/configs/conf-server splunk_server=*\n| fields splunk_server, title, signatureVersion\n| search title=node_auth\n| dedup splunk_server \n| eval config=\"server.conf\"\n| table splunk_server, config, title, signatureVersion\n|  rename title AS \"Stanza Name\"",
				"queryParameters": {
					"earliest": "$tok_time.earliest$",
					"latest": "$tok_time.latest$"
				}
			},
			"name": "Get_signature_version"
		},
		"ds_UczsRAvZ": {
			"type": "ds.search",
			"options": {
				"query": "| rest /services/configs/conf-server splunk_server=*\n| fields splunk_server, title, legacyCiphers\n| search title=general\n| eval config=\"server.conf\"\n| table splunk_server, config, title, legacyCiphers\n| rename title AS \"Stanza Name\"",
				"queryParameters": {
					"earliest": "$tok_time.earliest$",
					"latest": "$tok_time.latest$"
				}
			},
			"name": "Get_legacyCiphers"
		},
		"ds_I55yNmHj": {
			"type": "ds.search",
			"options": {
				"query": "| rest /services/configs/conf-server splunk_server=* \n|  fields *",
				"queryParameters": {
					"earliest": "$tok_time.earliest$",
					"latest": "$tok_time.latest$"
				}
			},
			"name": "rest_server_conf"
		},
		"ds_5UBapEny": {
			"type": "ds.chain",
			"options": {
				"extend": "ds_I55yNmHj",
				"query": "| fields title, splunk_server, *Verify* \n| search title IN (\"sslConfig\") \n| eval sslVerifyServerCert = if(isnull(sslVerifyServerCert), \"0\", sslVerifyServerCert)\n| table splunk_server, title, *\n| rename title AS Stanza"
			},
			"name": "query_sslConfig"
		},
		"ds_Cxho7vYd": {
			"type": "ds.chain",
			"options": {
				"extend": "ds_I55yNmHj",
				"query": "| fields title, splunk_server, sslVerify* \n| search title IN (\"kvstore\") \n| table splunk_server, title, *\n| rename title AS Stanza"
			},
			"name": "query_KVstore"
		},
		"ds_CNAXPTqF": {
			"type": "ds.chain",
			"options": {
				"extend": "ds_I55yNmHj",
				"query": "| fields title, splunk_server, sslVerify* \n| search title IN (\"pythonSslClientConfig\") \n| table splunk_server, title, *\n| rename title AS Stanza"
			},
			"name": "query_pythonSsl"
		},
		"ds_2WGLze9V": {
			"type": "ds.chain",
			"options": {
				"query": "| inputlookup pythonhttps_status"
			},
			"name": "get_PythonHTTPS"
		},
		"ds_4pLy9omZ": {
			"type": "ds.search",
			"options": {
				"query": "index=_internal sourcetype=splunkd log_level=ERROR host=\"deb-spl\" component IN ( \"KVStoreConfigurationProvider\", \"x509\", \"sslcommon\" )\n|  table _time, host, component, log_level, event_message",
				"queryParameters": {
					"earliest": "$tok_time.earliest$",
					"latest": "$tok_time.latest$"
				}
			},
			"name": "Config_errors"
		}
	},
	"defaults": {
		"dataSources": {
			"ds.search": {
				"options": {
					"queryParameters": {
						"latest": "$global_time.latest$",
						"earliest": "$global_time.earliest$"
					}
				}
			}
		}
	},
	"inputs": {
		"input_global_trp": {
			"type": "input.timerange",
			"options": {
				"token": "tok_time",
				"defaultValue": "-4h@m,now"
			},
			"title": "Time Range"
		}
	},
	"layout": {
		"type": "grid",
		"options": {},
		"structure": [
			{
				"item": "viz_yKkm5tZs",
				"type": "block",
				"position": {
					"x": 0,
					"y": 0,
					"w": 284,
					"h": 171
				}
			},
			{
				"item": "viz_H09rfJd0",
				"type": "block",
				"position": {
					"x": 0,
					"y": 171,
					"w": 388,
					"h": 385
				}
			},
			{
				"item": "viz_Kj1WH36s",
				"type": "block",
				"position": {
					"x": 0,
					"y": 556,
					"w": 388,
					"h": 358
				}
			},
			{
				"item": "viz_7lWSsZ57",
				"type": "block",
				"position": {
					"x": 284,
					"y": 0,
					"w": 316,
					"h": 171
				}
			},
			{
				"item": "viz_NOVwuDUA",
				"type": "block",
				"position": {
					"x": 388,
					"y": 373,
					"w": 426,
					"h": 183
				}
			},
			{
				"item": "viz_OaMSYBrC",
				"type": "block",
				"position": {
					"x": 388,
					"y": 171,
					"w": 426,
					"h": 202
				}
			},
			{
				"item": "viz_gmPP4LGr",
				"type": "block",
				"position": {
					"x": 388,
					"y": 556,
					"w": 426,
					"h": 358
				}
			},
			{
				"item": "viz_7gcDIcL4",
				"type": "block",
				"position": {
					"x": 600,
					"y": 0,
					"w": 300,
					"h": 171
				}
			},
			{
				"item": "viz_kX7r6X4l",
				"type": "block",
				"position": {
					"x": 814,
					"y": 171,
					"w": 386,
					"h": 385
				}
			},
			{
				"item": "viz_j2FjNaJC",
				"type": "block",
				"position": {
					"x": 814,
					"y": 556,
					"w": 386,
					"h": 358
				}
			},
			{
				"item": "viz_QNKeK6Eq",
				"type": "block",
				"position": {
					"x": 900,
					"y": 0,
					"w": 300,
					"h": 171
				}
			},
			{
				"item": "viz_rr3CBLPE",
				"type": "block",
				"position": {
					"x": 0,
					"y": 914,
					"w": 1200,
					"h": 400
				}
			}
		],
		"globalInputs": [
			"input_global_trp"
		]
	},
	"description": "General environmental overview. This app is best to be deployed on a MC.",
	"title": "Encryption Overview"
}
    ]]></definition>
    <meta type="hiddenElements"><![CDATA[
{
	"hideEdit": false,
	"hideOpenInSearch": false,
	"hideExport": true
}
    ]]></meta>
</dashboard>